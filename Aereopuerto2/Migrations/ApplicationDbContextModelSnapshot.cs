// <auto-generated />
using System;
using Aereopuerto2.Contex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aereopuerto2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aereopuerto2.Entities.Chat", b =>
                {
                    b.Property<int>("PKChat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FKCliente")
                        .HasColumnType("int");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Gerente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKChat");

                    b.HasIndex("FKCliente");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Cliente", b =>
                {
                    b.Property<int>("PKCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("longtext");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("HoraConductor")
                        .HasColumnType("longtext");

                    b.Property<string>("HoraHotel")
                        .HasColumnType("longtext");

                    b.Property<string>("INE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreConductor")
                        .HasColumnType("longtext");

                    b.Property<int>("Pasajeros")
                        .HasColumnType("int");

                    b.Property<string>("Solicitud")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKCliente");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            PKCliente = 1,
                            Apellido = "Rabanne",
                            Correo = "paco@",
                            Edad = 36,
                            Estatus = "Por confirmar",
                            HoraConductor = "POR ASIGNAR",
                            HoraHotel = "POR ASIGNAR",
                            INE = "PACCB24",
                            Nombre = "Paco",
                            NombreConductor = "",
                            Pasajeros = 1,
                            Solicitud = "Aceptable",
                            Telefono = 23412,
                            TipoServicio = "VIP"
                        },
                        new
                        {
                            PKCliente = 2,
                            Apellido = "Herrera",
                            Correo = "caro@",
                            Edad = 23,
                            Estatus = "Por confirmar",
                            HoraConductor = "POR ASIGNAR",
                            HoraHotel = "POR ASIGNAR",
                            INE = "CAHR3G",
                            Nombre = "Carolina",
                            NombreConductor = "",
                            Pasajeros = 2,
                            Solicitud = "Aceptable",
                            Telefono = 87868,
                            TipoServicio = "Premium"
                        });
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Conductor", b =>
                {
                    b.Property<int>("PKConductor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Calificaciones")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Licencia")
                        .HasColumnType("int");

                    b.Property<string>("NotasAdicionales")
                        .HasColumnType("longtext");

                    b.HasKey("PKConductor");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Conductor");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Empleado", b =>
                {
                    b.Property<int>("PKEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Conexion")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estatus")
                        .HasColumnType("longtext");

                    b.Property<string>("Horarios")
                        .HasColumnType("longtext");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Puesto")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKEmpleado");

                    b.ToTable("Empleado");

                    b.HasData(
                        new
                        {
                            PKEmpleado = 1,
                            Conexion = 0,
                            Contraseña = "123",
                            Correo = "davi@",
                            Estatus = "",
                            Horarios = "",
                            Matricula = "davi",
                            Nombre = "David",
                            Puesto = "Sistema",
                            Sexo = "Hombre"
                        },
                        new
                        {
                            PKEmpleado = 2,
                            Conexion = 0,
                            Contraseña = "123",
                            Correo = "dieg@",
                            Estatus = "",
                            Horarios = "",
                            Matricula = "dieg",
                            Nombre = "Diego",
                            Puesto = "Reservas",
                            Sexo = "Hombre"
                        },
                        new
                        {
                            PKEmpleado = 3,
                            Conexion = 0,
                            Contraseña = "123",
                            Correo = "joge@",
                            Estatus = "",
                            Horarios = "2PM-10PM",
                            Matricula = "joge",
                            Nombre = "Jorge",
                            Puesto = "Conductor",
                            Sexo = "Hombre"
                        },
                        new
                        {
                            PKEmpleado = 4,
                            Conexion = 0,
                            Contraseña = "123",
                            Correo = "joge@",
                            Estatus = "",
                            Horarios = "10PM-6AM",
                            Matricula = "jony",
                            Nombre = "Jonathan",
                            Puesto = "Conductor",
                            Sexo = "Hombre"
                        });
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Reserva", b =>
                {
                    b.Property<int>("PKReservas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasColumnType("longtext");

                    b.Property<int?>("FKCliente")
                        .HasColumnType("int");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("HoraConductor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HoraHotel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKReservas");

                    b.HasIndex("FKCliente");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Sistema", b =>
                {
                    b.Property<int>("PKSistemas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.HasKey("PKSistemas");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Chat", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("FKCliente");

                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Cliente", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Conductor", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Reserva", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("FKCliente");

                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Sistema", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
