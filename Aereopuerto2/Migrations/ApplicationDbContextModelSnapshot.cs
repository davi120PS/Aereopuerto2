// <auto-generated />
using System;
using Aereopuerto2.Contex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aereopuerto2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aereopuerto2.Entities.Chat", b =>
                {
                    b.Property<int>("PKChat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConductorPKEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("FKCliente")
                        .HasColumnType("int");

                    b.Property<int?>("FKConductor")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKChat");

                    b.HasIndex("ConductorPKEmpleado");

                    b.HasIndex("FKCliente");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Cliente", b =>
                {
                    b.Property<int>("PKCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("INE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Pasajeros")
                        .HasColumnType("int");

                    b.Property<string>("Solicitud")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Conductor", b =>
                {
                    b.Property<int>("PKConductor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Calificaciones")
                        .HasColumnType("int");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Licencia")
                        .HasColumnType("int");

                    b.Property<string>("NotasAdicionales")
                        .HasColumnType("longtext");

                    b.HasKey("PKConductor");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Conductor");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Empleado", b =>
                {
                    b.Property<int>("PKEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estatus")
                        .HasColumnType("longtext");

                    b.Property<string>("Horarios")
                        .HasColumnType("longtext");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Puesto")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKEmpleado");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Reserva", b =>
                {
                    b.Property<int>("PKReservas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.HasKey("PKReservas");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Sistema", b =>
                {
                    b.Property<int>("PKSistemas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.HasKey("PKSistemas");

                    b.HasIndex("FKEmpleado");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Chat", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Conductor")
                        .WithMany()
                        .HasForeignKey("ConductorPKEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aereopuerto2.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("FKCliente");

                    b.Navigation("Cliente");

                    b.Navigation("Conductor");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Conductor", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Reserva", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Aereopuerto2.Entities.Sistema", b =>
                {
                    b.HasOne("Aereopuerto2.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
